/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-20 10:20:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Sign Up</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .signup-container {\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("            color: #555;\r\n");
      out.write("        }\r\n");
      out.write("        input, select {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            margin-top: 5px;\r\n");
      out.write("            transition: border-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        input:focus, select:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: #4CAF50;\r\n");
      out.write("        }\r\n");
      out.write("        input.error, select.error {\r\n");
      out.write("            border-color: #ff0000;\r\n");
      out.write("        }\r\n");
      out.write("        .button {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("        .button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        .phone-group {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .country-code {\r\n");
      out.write("            width: 80px !important;\r\n");
      out.write("            background: #f9f9f9;\r\n");
      out.write("        }\r\n");
      out.write("        .input-status {\r\n");
      out.write("            font-size: 0.85em;\r\n");
      out.write("            margin-top: 5px;\r\n");
      out.write("            min-height: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .valid {\r\n");
      out.write("            color: #4CAF50;\r\n");
      out.write("        }\r\n");
      out.write("        .invalid {\r\n");
      out.write("            color: #ff0000;\r\n");
      out.write("        }\r\n");
      out.write("        .checking {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("        }\r\n");
      out.write("        .error-message {\r\n");
      out.write("            color: #ff0000;\r\n");
      out.write("            background-color: #ffe6e6;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .form-requirements {\r\n");
      out.write("            font-size: 0.8em;\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin-top: 4px;\r\n");
      out.write("        }\r\n");
      out.write("        .input-icon {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 10px;\r\n");
      out.write("            top: 35px;\r\n");
      out.write("            color: #ccc;\r\n");
      out.write("        }\r\n");
      out.write("        .password-requirements {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\r\n");
      out.write("            font-size: 0.8em;\r\n");
      out.write("            z-index: 100;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            right: 0;\r\n");
      out.write("        }\r\n");
      out.write("        .requirement {\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("            color: #666;\r\n");
      out.write("        }\r\n");
      out.write("        .requirement.met {\r\n");
      out.write("            color: #4CAF50;\r\n");
      out.write("        }\r\n");
      out.write("        .password-toggle {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 10px;\r\n");
      out.write("            top: 38px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            color: #666;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"signup-container\">\r\n");
      out.write("        <h2>Sign Up</h2>\r\n");
      out.write("        ");
 if (request.getAttribute("error") != null) { 
      out.write("\r\n");
      out.write("            <div class=\"error-message\">");
      out.print( request.getAttribute("error") );
      out.write("</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        <form id=\"signupForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/signup\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Full Name</label>\r\n");
      out.write("                <input type=\"text\" name=\"fullName\" id=\"fullName\" required minlength=\"2\"\r\n");
      out.write("                       oninput=\"validateFullName(this)\">\r\n");
      out.write("                <div class=\"input-status\" id=\"fullNameStatus\"></div>\r\n");
      out.write("                <div class=\"form-requirements\">Minimum 2 characters, letters and spaces only</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Username</label>\r\n");
      out.write("                <input type=\"text\" name=\"username\" id=\"username\" required minlength=\"4\"\r\n");
      out.write("                       onkeyup=\"debounceUsername(this.value)\">\r\n");
      out.write("                <div class=\"input-status\" id=\"usernameStatus\"></div>\r\n");
      out.write("                <div class=\"form-requirements\">4-20 characters, letters, numbers and underscores only</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Email</label>\r\n");
      out.write("                <input type=\"email\" name=\"email\" id=\"email\" required onblur=\"checkEmail(this.value)\">\r\n");
      out.write("                <div class=\"input-status\" id=\"emailStatus\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Country</label>\r\n");
      out.write("                <select name=\"country\" id=\"country\" required onchange=\"updateCountryCode()\">\r\n");
      out.write("                    <option value=\"\">Select Country</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Phone Number</label>\r\n");
      out.write("                <div class=\"phone-group\">\r\n");
      out.write("                    <input type=\"text\" id=\"countryCode\" name=\"countryCode\" class=\"country-code\" readonly>\r\n");
      out.write("                    <input type=\"tel\" name=\"phoneNumber\" id=\"phoneNumber\" required\r\n");
      out.write("                           oninput=\"validatePhoneNumber(this)\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"input-status\" id=\"phoneStatus\"></div>\r\n");
      out.write("                <div class=\"form-requirements\">10 digits only</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Password</label>\r\n");
      out.write("                <input type=\"password\" name=\"password\" id=\"password\" required minlength=\"8\"\r\n");
      out.write("                       oninput=\"validatePassword(this)\">\r\n");
      out.write("                <span class=\"password-toggle\" onclick=\"togglePassword('password')\">👁️</span>\r\n");
      out.write("                <div class=\"input-status\" id=\"passwordStatus\"></div>\r\n");
      out.write("                <div class=\"password-requirements\" id=\"passwordRequirements\">\r\n");
      out.write("                    <div class=\"requirement\" id=\"lengthReq\">✗ At least 8 characters</div>\r\n");
      out.write("                    <div class=\"requirement\" id=\"upperReq\">✗ One uppercase letter</div>\r\n");
      out.write("                    <div class=\"requirement\" id=\"lowerReq\">✗ One lowercase letter</div>\r\n");
      out.write("                    <div class=\"requirement\" id=\"numberReq\">✗ One number</div>\r\n");
      out.write("                    <div class=\"requirement\" id=\"specialReq\">✗ One special character</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Confirm Password</label>\r\n");
      out.write("                <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" required\r\n");
      out.write("                       oninput=\"validateConfirmPassword()\">\r\n");
      out.write("                <span class=\"password-toggle\" onclick=\"togglePassword('confirmPassword')\">👁️</span>\r\n");
      out.write("                <div class=\"input-status\" id=\"confirmPasswordStatus\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <button type=\"submit\" class=\"button\" id=\"submitButton\">Sign Up</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"login-link\">\r\n");
      out.write("            Already have an account? <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login.jsp\">Login</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        let usernameTimer;\r\n");
      out.write("        let usernameValid = false;\r\n");
      out.write("        let emailValid = false;\r\n");
      out.write("        let passwordValid = false;\r\n");
      out.write("\r\n");
      out.write("        // Full Name Validation\r\n");
      out.write("        function validateFullName(input) {\r\n");
      out.write("            const fullNameRegex = /^[A-Za-z\\s]{2,}$/;\r\n");
      out.write("            const isValid = fullNameRegex.test(input.value);\r\n");
      out.write("            const status = document.getElementById('fullNameStatus');\r\n");
      out.write("\r\n");
      out.write("            if (isValid) {\r\n");
      out.write("                input.classList.remove('error');\r\n");
      out.write("                status.textContent = 'Valid name';\r\n");
      out.write("                status.className = 'input-status valid';\r\n");
      out.write("                return true;\r\n");
      out.write("            } else {\r\n");
      out.write("                input.classList.add('error');\r\n");
      out.write("                status.textContent = 'Please enter a valid name (letters and spaces only)';\r\n");
      out.write("                status.className = 'input-status invalid';\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Phone Number Validation\r\n");
      out.write("        function validatePhoneNumber(input) {\r\n");
      out.write("            const phoneRegex = /^\\d{10}$/;\r\n");
      out.write("            const isValid = phoneRegex.test(input.value);\r\n");
      out.write("            const status = document.getElementById('phoneStatus');\r\n");
      out.write("\r\n");
      out.write("            if (isValid) {\r\n");
      out.write("                input.classList.remove('error');\r\n");
      out.write("                status.textContent = 'Valid phone number';\r\n");
      out.write("                status.className = 'input-status valid';\r\n");
      out.write("                return true;\r\n");
      out.write("            } else {\r\n");
      out.write("                input.classList.add('error');\r\n");
      out.write("                status.textContent = 'Please enter a valid 10-digit phone number';\r\n");
      out.write("                status.className = 'input-status invalid';\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Password Validation\r\n");
      out.write("        function validatePassword(input) {\r\n");
      out.write("            const password = input.value;\r\n");
      out.write("            const lengthReq = document.getElementById('lengthReq');\r\n");
      out.write("            const upperReq = document.getElementById('upperReq');\r\n");
      out.write("            const lowerReq = document.getElementById('lowerReq');\r\n");
      out.write("            const numberReq = document.getElementById('numberReq');\r\n");
      out.write("            const specialReq = document.getElementById('specialReq');\r\n");
      out.write("\r\n");
      out.write("            // Show requirements on focus\r\n");
      out.write("            input.onfocus = function() {\r\n");
      out.write("                document.getElementById('passwordRequirements').style.display = 'block';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            input.onblur = function() {\r\n");
      out.write("                document.getElementById('passwordRequirements').style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Check each requirement\r\n");
      out.write("            const hasLength = password.length >= 8;\r\n");
      out.write("            const hasUpper = /[A-Z]/.test(password);\r\n");
      out.write("            const hasLower = /[a-z]/.test(password);\r\n");
      out.write("            const hasNumber = /\\d/.test(password);\r\n");
      out.write("            const hasSpecial = /[!@#$%^&*]/.test(password);\r\n");
      out.write("\r\n");
      out.write("            lengthReq.className = 'requirement' + (hasLength ? ' met' : '');\r\n");
      out.write("            upperReq.className = 'requirement' + (hasUpper ? ' met' : '');\r\n");
      out.write("            lowerReq.className = 'requirement' + (hasLower ? ' met' : '');\r\n");
      out.write("            numberReq.className = 'requirement' + (hasNumber ? ' met' : '');\r\n");
      out.write("            specialReq.className = 'requirement' + (hasSpecial ? ' met' : '');\r\n");
      out.write("\r\n");
      out.write("            passwordValid = hasLength && hasUpper && hasLower && hasNumber && hasSpecial;\r\n");
      out.write("\r\n");
      out.write("            const status = document.getElementById('passwordStatus');\r\n");
      out.write("            if (passwordValid) {\r\n");
      out.write("                input.classList.remove('error');\r\n");
      out.write("                status.textContent = 'Strong password';\r\n");
      out.write("                status.className = 'input-status valid';\r\n");
      out.write("            } else {\r\n");
      out.write("                input.classList.add('error');\r\n");
      out.write("                status.textContent = 'Password does not meet requirements';\r\n");
      out.write("                status.className = 'input-status invalid';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            validateConfirmPassword();\r\n");
      out.write("            return passwordValid;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Confirm Password Validation\r\n");
      out.write("        function validateConfirmPassword() {\r\n");
      out.write("            const password = document.getElementById('password').value;\r\n");
      out.write("            const confirmPassword = document.getElementById('confirmPassword');\r\n");
      out.write("            const status = document.getElementById('confirmPasswordStatus');\r\n");
      out.write("\r\n");
      out.write("            if (confirmPassword.value === password && passwordValid) {\r\n");
      out.write("                confirmPassword.classList.remove('error');\r\n");
      out.write("                status.textContent = 'Passwords match';\r\n");
      out.write("                status.className = 'input-status valid';\r\n");
      out.write("                return true;\r\n");
      out.write("            } else {\r\n");
      out.write("                confirmPassword.classList.add('error');\r\n");
      out.write("                status.textContent = 'Passwords do not match';\r\n");
      out.write("                status.className = 'input-status invalid';\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Toggle Password Visibility\r\n");
      out.write("        function togglePassword(inputId) {\r\n");
      out.write("            const input = document.getElementById(inputId);\r\n");
      out.write("            input.type = input.type === 'password' ? 'text' : 'password';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Username Check\r\n");
      out.write("        function debounceUsername(username) {\r\n");
      out.write("            document.getElementById('usernameStatus').className = 'input-status checking';\r\n");
      out.write("            document.getElementById('usernameStatus').textContent = 'Checking...';\r\n");
      out.write("\r\n");
      out.write("            clearTimeout(usernameTimer);\r\n");
      out.write("            usernameTimer = setTimeout(() => checkUsername(username), 500);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function checkUsername(username) {\r\n");
      out.write("            const usernameRegex = /^[a-zA-Z0-9_]{4,20}$/;\r\n");
      out.write("            if (!usernameRegex.test(username)) {\r\n");
      out.write("                document.getElementById('usernameStatus').className = 'input-status invalid';\r\n");
      out.write("                document.getElementById('usernameStatus').textContent = 'Invalid username format';\r\n");
      out.write("                document.getElementById('username').classList.add('error');\r\n");
      out.write("                usernameValid = false;\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/check-username?username=' + encodeURIComponent(username))\r\n");
      out.write("                .then(response => response.text())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    const input = document.getElementById('username');\r\n");
      out.write("                    if (data === 'available') {\r\n");
      out.write("                        document.getElementById('usernameStatus').className = 'input-status valid';\r\n");
      out.write("                        document.getElementById('usernameStatus').textContent = 'Username is available';\r\n");
      out.write("                        input.classList.remove('error');\r\n");
      out.write("                        usernameValid = true;\r\n");
      out.write("                    } else {\r\n");
      out.write("                        document.getElementById('usernameStatus').className = 'input-status invalid';\r\n");
      out.write("                        document.getElementById('usernameStatus').textContent = 'Username is already taken';\r\n");
      out.write("                        input.classList.add('error');\r\n");
      out.write("                        usernameValid = false;\r\n");
      out.write("                    }\r\n");
      out.write("                })\r\n");
      out.write("                .catch(error => {\r\n");
      out.write("                    document.getElementById('usernameStatus').className = 'input-status invalid';\r\n");
      out.write("                    document.getElementById('usernameStatus').textContent = 'Error checking username';\r\n");
      out.write("                    document.getElementById('username').classList.add('error');\r\n");
      out.write("                    usernameValid = false;\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Email Check\r\n");
      out.write("        function checkEmail(email) {\r\n");
      out.write("            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n");
      out.write("            if (!emailRegex.test(email)) {\r\n");
      out.write("                document.getElementById('emailStatus').className = 'input-status invalid';\r\n");
      out.write("                document.getElementById('emailStatus').textContent = 'Invalid email format';\r\n");
      out.write("                document.getElementById('email').classList.add('error');\r\n");
      out.write("                emailValid = false;\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/check-email?email=' + encodeURIComponent(email))\r\n");
      out.write("                .then(response => response.text())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    const input = document.getElementById('email');\r\n");
      out.write("                    if (data === 'available') {\r\n");
      out.write("                        document.getElementById('emailStatus').className = 'input-status valid';\r\n");
      out.write("                        document.getElementById('emailStatus').textContent = 'Email is available';\r\n");
      out.write("                        input.classList.remove('error');\r\n");
      out.write("                        emailValid = true;\r\n");
      out.write("                    } else {\r\n");
      out.write("                        document.getElementById('emailStatus').className = 'input-status invalid';\r\n");
      out.write("                        document.getElementById('emailStatus').textContent = 'Email is already taken';\r\n");
      out.write("                        input.classList.add('error');\r\n");
      out.write("                        emailValid = false;\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Form Validation\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            let isValid = true;\r\n");
      out.write("\r\n");
      out.write("            // Validate Full Name\r\n");
      out.write("            if (!validateFullName(document.getElementById('fullName'))) {\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Check Username\r\n");
      out.write("            if (!usernameValid) {\r\n");
      out.write("                document.getElementById('username').classList.add('error');\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Check Email\r\n");
      out.write("            if (!emailValid) {\r\n");
      out.write("                document.getElementById('email').classList.add('error');\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Validate Phone Number\r\n");
      out.write("            if (!validatePhoneNumber(document.getElementById('phoneNumber'))) {\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Check Password\r\n");
      out.write("            if (!passwordValid) {\r\n");
      out.write("                document.getElementById('password').classList.add('error');\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Check Confirm Password\r\n");
      out.write("            if (!validateConfirmPassword()) {\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (!isValid) {\r\n");
      out.write("                alert('Please fix the errors in the form before submitting.');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Countries data and related functions remain the same\r\n");
      out.write("        const countries = [\r\n");
      out.write("                { name: \"Afghanistan\", code: \"+93\" },\r\n");
      out.write("                { name: \"Albania\", code: \"+355\" },\r\n");
      out.write("                { name: \"Algeria\", code: \"+213\" },\r\n");
      out.write("                { name: \"Andorra\", code: \"+376\" },\r\n");
      out.write("                { name: \"Angola\", code: \"+244\" },\r\n");
      out.write("                { name: \"Argentina\", code: \"+54\" },\r\n");
      out.write("                { name: \"Armenia\", code: \"+374\" },\r\n");
      out.write("                { name: \"Australia\", code: \"+61\" },\r\n");
      out.write("                { name: \"Austria\", code: \"+43\" },\r\n");
      out.write("                { name: \"Azerbaijan\", code: \"+994\" },\r\n");
      out.write("                { name: \"Bahamas\", code: \"+1\" },\r\n");
      out.write("                { name: \"Bahrain\", code: \"+973\" },\r\n");
      out.write("                { name: \"Bangladesh\", code: \"+880\" },\r\n");
      out.write("                { name: \"Barbados\", code: \"+1\" },\r\n");
      out.write("                { name: \"Belarus\", code: \"+375\" },\r\n");
      out.write("                { name: \"Belgium\", code: \"+32\" },\r\n");
      out.write("                { name: \"Belize\", code: \"+501\" },\r\n");
      out.write("                { name: \"Benin\", code: \"+229\" },\r\n");
      out.write("                { name: \"Bhutan\", code: \"+975\" },\r\n");
      out.write("                { name: \"Bolivia\", code: \"+591\" },\r\n");
      out.write("                { name: \"Bosnia and Herzegovina\", code: \"+387\" },\r\n");
      out.write("                { name: \"Botswana\", code: \"+267\" },\r\n");
      out.write("                { name: \"Brazil\", code: \"+55\" },\r\n");
      out.write("                { name: \"Brunei\", code: \"+673\" },\r\n");
      out.write("                { name: \"Bulgaria\", code: \"+359\" },\r\n");
      out.write("                { name: \"Burkina Faso\", code: \"+226\" },\r\n");
      out.write("                { name: \"Burundi\", code: \"+257\" },\r\n");
      out.write("                { name: \"Cambodia\", code: \"+855\" },\r\n");
      out.write("                { name: \"Cameroon\", code: \"+237\" },\r\n");
      out.write("                { name: \"Canada\", code: \"+1\" },\r\n");
      out.write("                { name: \"Cape Verde\", code: \"+238\" },\r\n");
      out.write("                { name: \"Central African Republic\", code: \"+236\" },\r\n");
      out.write("                { name: \"Chad\", code: \"+235\" },\r\n");
      out.write("                { name: \"Chile\", code: \"+56\" },\r\n");
      out.write("                { name: \"China\", code: \"+86\" },\r\n");
      out.write("                { name: \"Colombia\", code: \"+57\" },\r\n");
      out.write("                { name: \"Comoros\", code: \"+269\" },\r\n");
      out.write("                { name: \"Congo\", code: \"+242\" },\r\n");
      out.write("                { name: \"Costa Rica\", code: \"+506\" },\r\n");
      out.write("                { name: \"Croatia\", code: \"+385\" },\r\n");
      out.write("                { name: \"Cuba\", code: \"+53\" },\r\n");
      out.write("                { name: \"Cyprus\", code: \"+357\" },\r\n");
      out.write("                { name: \"Czech Republic\", code: \"+420\" },\r\n");
      out.write("                { name: \"Denmark\", code: \"+45\" },\r\n");
      out.write("                { name: \"Djibouti\", code: \"+253\" },\r\n");
      out.write("                { name: \"Dominican Republic\", code: \"+1\" },\r\n");
      out.write("                { name: \"Ecuador\", code: \"+593\" },\r\n");
      out.write("                { name: \"Egypt\", code: \"+20\" },\r\n");
      out.write("                { name: \"El Salvador\", code: \"+503\" },\r\n");
      out.write("                { name: \"Equatorial Guinea\", code: \"+240\" },\r\n");
      out.write("                { name: \"Eritrea\", code: \"+291\" },\r\n");
      out.write("                { name: \"Estonia\", code: \"+372\" },\r\n");
      out.write("                { name: \"Ethiopia\", code: \"+251\" },\r\n");
      out.write("                { name: \"Fiji\", code: \"+679\" },\r\n");
      out.write("                { name: \"Finland\", code: \"+358\" },\r\n");
      out.write("                { name: \"France\", code: \"+33\" },\r\n");
      out.write("                { name: \"Gabon\", code: \"+241\" },\r\n");
      out.write("                { name: \"Gambia\", code: \"+220\" },\r\n");
      out.write("                { name: \"Georgia\", code: \"+995\" },\r\n");
      out.write("                { name: \"Germany\", code: \"+49\" },\r\n");
      out.write("                { name: \"Ghana\", code: \"+233\" },\r\n");
      out.write("                { name: \"Greece\", code: \"+30\" },\r\n");
      out.write("                { name: \"Greenland\", code: \"+299\" },\r\n");
      out.write("                { name: \"Guatemala\", code: \"+502\" },\r\n");
      out.write("                { name: \"Guinea\", code: \"+224\" },\r\n");
      out.write("                { name: \"Guinea-Bissau\", code: \"+245\" },\r\n");
      out.write("                { name: \"Guyana\", code: \"+592\" },\r\n");
      out.write("                { name: \"Haiti\", code: \"+509\" },\r\n");
      out.write("                { name: \"Honduras\", code: \"+504\" },\r\n");
      out.write("                { name: \"Hong Kong\", code: \"+852\" },\r\n");
      out.write("                { name: \"Hungary\", code: \"+36\" },\r\n");
      out.write("                { name: \"Iceland\", code: \"+354\" },\r\n");
      out.write("                { name: \"India\", code: \"+91\" },\r\n");
      out.write("                { name: \"Indonesia\", code: \"+62\" },\r\n");
      out.write("                { name: \"Iran\", code: \"+98\" },\r\n");
      out.write("                { name: \"Iraq\", code: \"+964\" },\r\n");
      out.write("                { name: \"Ireland\", code: \"+353\" },\r\n");
      out.write("                { name: \"Israel\", code: \"+972\" },\r\n");
      out.write("                { name: \"Italy\", code: \"+39\" },\r\n");
      out.write("                { name: \"Jamaica\", code: \"+1\" },\r\n");
      out.write("                { name: \"Japan\", code: \"+81\" },\r\n");
      out.write("                { name: \"Jordan\", code: \"+962\" },\r\n");
      out.write("                { name: \"Kazakhstan\", code: \"+7\" },\r\n");
      out.write("                { name: \"Kenya\", code: \"+254\" },\r\n");
      out.write("                { name: \"Kuwait\", code: \"+965\" },\r\n");
      out.write("                { name: \"Kyrgyzstan\", code: \"+996\" },\r\n");
      out.write("                { name: \"Laos\", code: \"+856\" },\r\n");
      out.write("                { name: \"Latvia\", code: \"+371\" },\r\n");
      out.write("                { name: \"Lebanon\", code: \"+961\" },\r\n");
      out.write("                { name: \"Lesotho\", code: \"+266\" },\r\n");
      out.write("                { name: \"Liberia\", code: \"+231\" },\r\n");
      out.write("                { name: \"Libya\", code: \"+218\" },\r\n");
      out.write("                { name: \"Liechtenstein\", code: \"+423\" },\r\n");
      out.write("                { name: \"Lithuania\", code: \"+370\" },\r\n");
      out.write("                { name: \"Luxembourg\", code: \"+352\" },\r\n");
      out.write("                { name: \"Madagascar\", code: \"+261\" },\r\n");
      out.write("                { name: \"Malawi\", code: \"+265\" },\r\n");
      out.write("                { name: \"Malaysia\", code: \"+60\" },\r\n");
      out.write("                { name: \"Maldives\", code: \"+960\" },\r\n");
      out.write("                { name: \"Mali\", code: \"+223\" },\r\n");
      out.write("                { name: \"Malta\", code: \"+356\" },\r\n");
      out.write("                { name: \"Mauritania\", code: \"+222\" },\r\n");
      out.write("                { name: \"Mauritius\", code: \"+230\" },\r\n");
      out.write("                { name: \"Mexico\", code: \"+52\" },\r\n");
      out.write("                { name: \"Moldova\", code: \"+373\" },\r\n");
      out.write("                { name: \"Monaco\", code: \"+377\" },\r\n");
      out.write("                { name: \"Mongolia\", code: \"+976\" },\r\n");
      out.write("                { name: \"Montenegro\", code: \"+382\" },\r\n");
      out.write("                { name: \"Morocco\", code: \"+212\" },\r\n");
      out.write("                { name: \"Mozambique\", code: \"+258\" },\r\n");
      out.write("                { name: \"Myanmar\", code: \"+95\" },\r\n");
      out.write("                { name: \"Namibia\", code: \"+264\" },\r\n");
      out.write("                { name: \"Nepal\", code: \"+977\" },\r\n");
      out.write("                { name: \"Netherlands\", code: \"+31\" },\r\n");
      out.write("                { name: \"New Zealand\", code: \"+64\" },\r\n");
      out.write("                { name: \"Nicaragua\", code: \"+505\" },\r\n");
      out.write("                { name: \"Niger\", code: \"+227\" },\r\n");
      out.write("                { name: \"Nigeria\", code: \"+234\" },\r\n");
      out.write("                { name: \"North Korea\", code: \"+850\" },\r\n");
      out.write("                { name: \"Norway\", code: \"+47\" },\r\n");
      out.write("                { name: \"Oman\", code: \"+968\" },\r\n");
      out.write("                { name: \"Pakistan\", code: \"+92\" },\r\n");
      out.write("                { name: \"Palestine\", code: \"+970\" },\r\n");
      out.write("                { name: \"Panama\", code: \"+507\" },\r\n");
      out.write("                { name: \"Papua New Guinea\", code: \"+675\" },\r\n");
      out.write("                { name: \"Paraguay\", code: \"+595\" },\r\n");
      out.write("                { name: \"Peru\", code: \"+51\" },\r\n");
      out.write("                { name: \"Philippines\", code: \"+63\" },\r\n");
      out.write("                { name: \"Poland\", code: \"+48\" },\r\n");
      out.write("                { name: \"Portugal\", code: \"+351\" },\r\n");
      out.write("                { name: \"Qatar\", code: \"+974\" },\r\n");
      out.write("                { name: \"Romania\", code: \"+40\" },\r\n");
      out.write("                { name: \"Russia\", code: \"+7\" },\r\n");
      out.write("                { name: \"Rwanda\", code: \"+250\" },\r\n");
      out.write("                { name: \"Saudi Arabia\", code: \"+966\" },\r\n");
      out.write("                { name: \"Senegal\", code: \"+221\" },\r\n");
      out.write("                { name: \"Serbia\", code: \"+381\" },\r\n");
      out.write("                { name: \"Seychelles\", code: \"+248\" },\r\n");
      out.write("                { name: \"Sierra Leone\", code: \"+232\" },\r\n");
      out.write("                { name: \"Singapore\", code: \"+65\" },\r\n");
      out.write("                { name: \"Slovakia\", code: \"+421\" },\r\n");
      out.write("                { name: \"Slovenia\", code: \"+386\" },\r\n");
      out.write("                { name: \"Somalia\", code: \"+252\" },\r\n");
      out.write("                { name: \"South Africa\", code: \"+27\" },\r\n");
      out.write("                { name: \"South Korea\", code: \"+82\" },\r\n");
      out.write("                { name: \"South Sudan\", code: \"+211\" },\r\n");
      out.write("                { name: \"Spain\", code: \"+34\" },\r\n");
      out.write("                { name: \"Sri Lanka\", code: \"+94\" },\r\n");
      out.write("                { name: \"Sudan\", code: \"+249\" },\r\n");
      out.write("                { name: \"Sweden\", code: \"+46\" },\r\n");
      out.write("                { name: \"Switzerland\", code: \"+41\" },\r\n");
      out.write("                { name: \"Syria\", code: \"+963\" },\r\n");
      out.write("                { name: \"Taiwan\", code: \"+886\" },\r\n");
      out.write("                { name: \"Tajikistan\", code: \"+992\" },\r\n");
      out.write("                { name: \"Tanzania\", code: \"+255\" },\r\n");
      out.write("                { name: \"Thailand\", code: \"+66\" },\r\n");
      out.write("                { name: \"Togo\", code: \"+228\" },\r\n");
      out.write("                { name: \"Tunisia\", code: \"+216\" },\r\n");
      out.write("                { name: \"Turkey\", code: \"+90\" },\r\n");
      out.write("                { name: \"Turkmenistan\", code: \"+993\" },\r\n");
      out.write("                { name: \"Uganda\", code: \"+256\" },\r\n");
      out.write("                { name: \"Ukraine\", code: \"+380\" },\r\n");
      out.write("                { name: \"United Arab Emirates\", code: \"+971\" },\r\n");
      out.write("                { name: \"United Kingdom\", code: \"+44\" },\r\n");
      out.write("                { name: \"United States\", code: \"+1\" },\r\n");
      out.write("                { name: \"Uruguay\", code: \"+598\" },\r\n");
      out.write("                { name: \"Uzbekistan\", code: \"+998\" },\r\n");
      out.write("                { name: \"Vatican City\", code: \"+379\" },\r\n");
      out.write("                { name: \"Venezuela\", code: \"+58\" },\r\n");
      out.write("                { name: \"Vietnam\", code: \"+84\" },\r\n");
      out.write("                { name: \"Yemen\", code: \"+967\" },\r\n");
      out.write("                { name: \"Zambia\", code: \"+260\" },\r\n");
      out.write("                { name: \"Zimbabwe\", code: \"+263\" }\r\n");
      out.write("            ];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        // Populate country dropdown\r\n");
      out.write("        const countrySelect = document.getElementById('country');\r\n");
      out.write("        countries.sort((a, b) => a.name.localeCompare(b.name)).forEach(country => {\r\n");
      out.write("            const option = document.createElement('option');\r\n");
      out.write("            option.value = country.name;\r\n");
      out.write("            option.textContent = country.name;\r\n");
      out.write("            countrySelect.appendChild(option);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function updateCountryCode() {\r\n");
      out.write("            const selectedCountry = document.getElementById('country').value;\r\n");
      out.write("            const country = countries.find(c => c.name === selectedCountry);\r\n");
      out.write("            if (country) {\r\n");
      out.write("                document.getElementById('countryCode').value = country.code;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Set initial country code\r\n");
      out.write("        updateCountryCode();\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
